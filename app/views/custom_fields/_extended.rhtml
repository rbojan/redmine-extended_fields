<% projects = Project.all_public.active(:order => 'name').collect{ |project| [ project.id, project.name ] } %>

<script type="text/javascript">
//<![CDATA[
var projects = <%= projects.to_json %>;
function toggle_extended_field_format() {
    format = $('custom_field_field_format');
    required = $('custom_field_is_required');
    p_length = $('custom_field_min_length');
    p_regexp = $('custom_field_regexp');
    p_default = $('custom_field_default_value');

    switch (format.value) {
        case 'text':
        case 'wiki':
            Element.replace(p_default, new Element('textarea', { id:   'custom_field_default_value',
                                                                 name: 'custom_field[default_value]',
                                                                 cols: 40,
                                                                 rows: 15 }));
            break;
        case 'bool':
            Element.replace(p_default, new Element('input', { type: 'checkbox',
                                                              id:   'custom_field_default_value',
                                                              name: 'custom_field[default_value]' }));
            break;
        case 'project':
            var select = new Element('select', { id:   'custom_field_default_value',
                                                 name: 'custom_field[default_value]' });
            if (required.checked) {
                <% if custom_field.default_value.blank? %>
                select.insert(new Element('option').update('<%= "--- #{l(:actionview_instancetag_blank_option)} ---" %>'));
                <% end %>
            } else {
                select.insert(new Element('option'));
            }
            for (var i = 0; i < projects.length; i++) {
                var option = new Element('option', { value: projects[i][0] }).update(projects[i][1])
                <% unless custom_field.default_value.blank? %>
                if (projects[i][0] == <%= custom_field.default_value.to_i %>) {
                    option.selected = true;
                }
                <% end %>
                select.insert(option);
            }
            Element.replace(p_default, select);
            break;
        default:
            Element.replace(p_default, new Element('input', { type: 'text',
                                                              id:   'custom_field_default_value',
                                                              name: 'custom_field[default_value]',
                                                              size: 30 }));
            break;
    }

    switch (format.value) {
        case 'wiki':
            Element.hide(p_regexp.parentNode);
            break;
        case 'project':
            Element.hide(p_length.parentNode);
            Element.hide(p_regexp.parentNode);
            break;
        default:
            break;
    }
}
Event.observe(window, 'load', toggle_extended_field_format);
//]]>
</script>

<p><%= form.text_field(:hint, :size => 50) %></p>

<%= observe_field(:custom_field_field_format, :function => 'toggle_extended_field_format();') %>
